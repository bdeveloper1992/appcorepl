	<tmpl_if is_mobile>
		<script id="reply-tmpl" type="text/x-jquery-tmpl">
			${tmpl2jq:%%appcore%%/mods/ThemePHC/tmpl/boards/inc-postreply-mobile.tmpl}
		</script>	
		
		<script id="replyform-tmpl" type="text/x-jquery-tmpl">
			<form class='reply_form' 
				onsubmit='return ajax_post_reply(this)' 
				id='reply_form_${postid}' 
				postid='${postid}'
				top_commentid='${top_commentid}'>
				
				<div class='wrap'>
					<input type='hidden' name='postid' value='${postid}'>
					
					<table>
						<tr>
							<td>
								<img class='user_photo' src="http://www.gravatar.com/avatar/%%user_email_md5%%?d=$(CDN:<tmpl_if user_photo>%%appcore%%%%user_photo%%<tmpl_else>%%appcore%%/mods/User/images/male-fb-sq-50px.jpg</tmpl_if>)&s=25" width=25 height=25 userid='%%user_userid%%' align=left>
							</td>
							<td colspan=2>
								<div class='content'>
									<textarea class='expandText' style="height:5em" class="expandText" name="text" tabindex="10"></textarea>
								</div>
							</td>
						<tmpl_if user_display>
						<tr>
							<td colspan=3>
								<div class='ident' id='postas_display'>
									Posting as <b>%%user_display%%</b>
								</div>
								<div class='controls'>
									<button type='submit' class='button' id='button_${postid}' tabindex="20">Post</button>
									<a href='#' class='cancel' tabindex="30">Cancel</a>
								</div>
							</td>
						</tr>
						<tmpl_else>
							<tr>
								<td>Name:</td>
								<td><input value='%%user_display%%' name='poster_name' size=15 tabindex="20"></td>
							
								<td rowspan=2>
									<div class='controls'>
										<button type='submit' class='button' id='button_${postid}' tabindex="40">Post</button>
										<a href='#' class='cancel' tabindex="50">Cancel</a>
									</div>
								</td>
							</tr>
							<tr>
								<td>Email:</td>
								<td><input value='%%user_email%%' name='poster_email' size=15 tabindex="30"></td>
							</tr>
						</tmpl_if>
					</table>
				

				</div>
			</form>
		</script>
		
	<tmpl_else>
		<script id="reply-tmpl" type="text/x-jquery-tmpl">
			${tmpl2jq:%%appcore%%/mods/ThemePHC/tmpl/boards/inc-postreply.tmpl}
		</script>
		
		<script id="replyform-tmpl" type="text/x-jquery-tmpl">
			<form class='reply_form' 
				onsubmit='return ajax_post_reply(this)' 
				id='reply_form_${postid}' 
				postid='${postid}'
				top_commentid='${top_commentid}'>
				
				<div class='wrap'>
					<input type='hidden' name='postid' value='${postid}'/>
					<div class='content'>
						<textarea class='expandText' style="width: 450px; height:5em" class="expandText" name="text" tabindex="1"></textarea>
					</div>
					<div class='controls'>
						<button type='submit' class='button' id='button_${postid}' tabindex="2">Post</button>
						<a href='#' class='cancel' tabindex="5">Cancel</a>
						 
					</div>
					<div class='form' id='postas_form_${postid}'<tmpl_unless user_display> style='display:block'</tmpl_unless>>
						<table>
							<tr>
								<td>Name:</td>
								<td><input value='%%user_display%%' name='poster_name' tabindex="3"/></td>
							</tr>
							<tr>
								<td>Email:</td>
								<td><input value='%%user_email%%' name='poster_email' tabindex="4"/></td>
							</tr>
						</table>
					</div>
					<tmpl_if user_display>
						<div class='ident' id='postas_display_${postid}'>
							Posting as <b>%%user_display%%</b> - <a href='javascript:void(show_postas_form_tmpl(${postid}));'>Change</a><tmpl_if board_fb_sync_enabled> | </tmpl_if> 
						</div>
					</tmpl_if>
					<div class=opts>
						<tmpl_if board_fb_sync_enabled>
						<input type=checkbox style='vertical-align:middle !important' name=fb_post value=1 id=fb_post checked><label for=fb_post>Post on Facebook</label>
						</tmpl_if>
					</div>
					<div class='fc'></div>
				</div>
			</form>
		</script>
	</tmpl_if>
	
	<script>
	function show_postas_form_tmpl(postid)
	{
		$("#postas_form_"+postid).show(200);
		$("#postas_display_"+postid).hide(200);
	}
	</script>
	
	<script>
	function x(e){return document.getElementById(e)}
	$(".actions .reply_link").live("click",function(){
			
		var	th = $(this),
		
			// Get ID of the post
			postid = th.attr("postid"),
			topid  = th.attr("top_commentid"),
			
			// Create selector string for the placeholder
			replyHolder = "#reply"+postid,
			
			// Check to see if the form is already in the DOM
			div = x("reply_form_"+postid),
			
			tmp = undefined,
			
			cancelFunc = function() 
			{
				var div = $('#reply_form_'+postid);
				div.hide(300, function(){
					//div.parentNode.removeChild(div);
					div.remove();
				});
			};
			
			
		// Create reply form for this post if doesnt already exist
		if(!div)
		{
			tmp = $("#replyform-tmpl").tmpl({postid:postid,top_commentid:topid});
			tmp.hide();
			$(replyHolder).append(tmp);
		}
		else
		{
			tmp = $(replyHolder+" .reply_form")
		}
		
		// Cache the reply type (reply to comment/reply to post) on the form element
		tmp.attr("type", th.attr("type"));
		
		// Add "Cancel" link handler
		$(replyHolder+' a.cancel').live("click",function(){
			
			cancelFunc();
			return false;
		});
		
		// Focus on text area
		var ta = $(replyHolder+' .expandText');
		ta.autogrow();
		
		// Close the reply form if user presses Escape
		ta.keyup(function(e){
			if (!e) var e = window.event;
			if (e.keyCode)    e.code = e.keyCode;
			else if (e.which) e.code = e.which;
			if(e.code == 27)
				cancelFunc();
		});
		
		
		// Make sure form visible
		//tmp.show(300, function() { ta.focus(); });
		tmp.show();
		ta.focus();
		
		
		return false;
		
	});
	
	function ajax_post_reply(formElm)
	{
		// Lock polling script till we get reply from server
		window.LockPolling = true;
		
		var postid = formElm.postid.value;
		var isPost = formElm.getAttribute("type") != "comment";
		var topid  = isPost ? postid : formElm.getAttribute("top_commentid");

		var postData = {
			comment: formElm.text.value,
			poster_name: formElm.poster_name.value,
			poster_email: formElm.poster_email.value,
			parent_commentid: isPost ? 0 : formElm.postid.value,
			output_fmt: "json",
			plain_text: 1
		};
		
		
		var btn = $("#button_"+postid);
		btn.html("<img src='"+loaderGif+"'>");
		btn.attr("disabled","true");
		//$("#post-placeholder").show();
		
		var errorFunc = function() 
		{
			//$("#post-placeholder").hide();
			if(confirm("There was an error saving your comment to the server - nothing was saved. Do you want to use the simple post page instead of this fancy page to make your post?"))
			{
				document.location.href = "%%binpath%%/%%board_folder_name%%/new?text=" + postData.text; 
			}
			
			window.LockPolling = false;
		};
		
		
		var postUrl = "%%binpath%%/%%board_folder_name%%/" + topid + "/post";
		//alert(postUrl);
		$.ajax({
			type: "POST",
			url: postUrl,
			data: postData,
			success: function(data)
			{
				//console.debug("got post data: "+data+", typeof: "+typeof(data));
				//alert("Got post data:"+data+", type:"+typeof(data));
				if(typeof(data) == "string")
				{
					// something wierd on server - should be JSON!
					errorFunc();
				}
				else
				{
					// apply proper indent to child comments
					data.indent_css = isPost ? 0 :
						parseInt($("#comment"+postid).attr("indent_css")) + %%boards_indent_multiplier%%;
					
					data.indent_is_odd = ((data.indent_css+0)/%%boards_indent_multiplier%%) % 2 == 0 ? 1:0;
					
					//console.debug(data);
					//console.debug("isPost:"+isPost);
					
					var output = $("#reply-tmpl").tmpl(data);
					if(isPost)
					{
						var insertSelector = "#post"+postid+" .replies_container";
						//console.debug("insertSelector:"+insertSelector);
						// This needs to be appended to the selector
						output.appendTo(insertSelector);
					}
					else
					{
						var insertSelector = "#wrap" + postid;
						// This needs to be inserted after the selector
						output.insertAfter(insertSelector);
					}
					
					// Update the polling script
					window.PollingTimestamp = data.timestamp;
					window.LockPolling = false;
					
					// Handle video and image links possible added by server - defined in js/boards-postlist-actions.js
					runOnloadScripts();
					
					//$("#post-placeholder").hide();
					
// 					formElm.text.value = "";
// 					formElm.text.updateAutogrow();
					
					formElm.parentNode.removeChild(formElm);
				}	
			},
			error: errorFunc
			
		});
		
		return false;
	}
	
	</script>
	<script flag='dynamic_server_content'>
		<tmpl_if single_post_page>
			window.PostID = %%postid%%;
		</tmpl_if>
		window.PollingTimestamp = '%%first_ts%%';
	</script>
	
	<script>
	$(function()
	{
		
		function insertPlayer()
		{
			var playerpath	= '%%appcore%%/mods/ThemePHC/flash/singlemp3player.swf';
			var filename	= '%%appcore%%/mods/ThemePHC/rx.mp3';
	
			var mp3html = '<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" ';
			mp3html += 'width="1" height="1" ';
			mp3html += 'codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab">';
			mp3html += '<param name="movie" value="'+playerpath+'?';
			mp3html += 'showDownload=false&file=' + filename + '&autoStart=true';
			mp3html += '&backColor=ffffff&frontColor=ffffff';
			mp3html += '&repeatPlay=false&songVolume=150" />';
			mp3html += '<param name="wmode" value="transparent" />';
			mp3html += '<embed wmode="transparent" width="1" height="1" ';
			mp3html += 'src="' + playerpath + '?'
			mp3html += 'showDownload=false&file=' + filename + '&autoStart=true';
			mp3html += '&backColor=ffffff&frontColor=ffffff';
			mp3html += '&repeatPlay=false&songVolume=150" ';
			mp3html += 'type="application/x-shockwave-flash" pluginspage="http://www.macromedia.com/go/getflashplayer" />';
			mp3html += '</object>';
			return mp3html;
	
		}
		(function($) {
			var	DEFAULT_INTERVAL = 1000,
				original  = document.title,
				timeoutId = undefined,
				isFlashing = false,
				stopFlasher = function(){$.flashTitle()},
				body = $(document.body);
			$.flashTitle = function(newMsg, interval) 
			{
				if (!newMsg) 
				{
					// stop flashing and reset title
					clearTimeout(timeoutId);
					document.title = original;
					
					// Remove event handler
					body.unbind('mousemove',stopFlasher);
					
				} 
				else 
				{
					// loop flashing
					interval = interval || DEFAULT_INTERVAL;
					timeoutId = setTimeout(function() 
					{
						clearTimeout(timeoutId);
						document.title = (document.title == original) ? newMsg : original;
						timeoutId = setTimeout(arguments.callee, interval);
					}, interval);
					
					// Stop flashing title when mouse moves
					body.bind('mousemove',stopFlasher);
				}
			};
			
			
		})(jQuery);
		
		function purr(msg,msgTitle,notSticky)
		{
			var notice = '<div class="notice">'
					+ '<div class="notice-body">' 
						+ '<img src="%%appcore%%/mods/ThemePHC/images/purr/info.png" alt="" />'
						+ (msgTitle ? + '<h3>'+msgTitle+'</h3>' : '')
						+ '<p>' + msg + '</p>'
					+ '</div>'
					+ '<div class="notice-bottom">'
					+ '</div>'
				+ '</div>';
				
			var p = $( notice ).purr(
				{
					usingTransparentPNG: true,
					isSticky: !notSticky
				}
			);
			p.bind("mouseup",function()
			{
				p.children("a.close").click();
			});;
		}
		
		window.LockPolling = false;
		
		var     pollingLock = false,
			doPoll = function()
			{
				// External lock preventing polling while posting
				if(window.LockPolling)
					return;
				
				// Internal lock preventing duplicate polls
				if(pollingLock) 
					return;
				pollingLock = true;
	
				$.ajax({
					type: "GET",
					url: "%%binpath%%/%%board_folder_name%%",
					data: 
					{
						first_ts: window.PollingTimestamp,
						output_fmt: 'json',
						<tmpl_if single_post_page>
						postid: window.PostID,
						</tmpl_if>
						mode: 'poll_new_posts'
					},
					success: function(data)
					{
						//console.debug("got post data: "+data+", typeof: "+typeof(data));
						//alert("Got post data:"+data+", type:"+typeof(data));
						if(typeof(data) == "string")
						{
							// something wierd on server - should be JSON!
							//alert("Got data as string");
						}
						else
						{
							if(data.last_ts)
								window.PollingTimestamp = data.last_ts;
							
							try
							{
								var windowMessage = "";
								var foundPostCount = 0;
								// Iterate over the list of posts and reate the posts from the template
								var posts = data.list;
								var foundToplevelPostCount = 0;
								if(posts)
								{
									for(var i=0;i<posts.length;i++)
									{
										var postData = posts[i];
										
										var isPost = postData.top_commentid<=0;
										
										if(isPost)
										{
											$("#post-tmpl").tmpl(postData).insertAfter("#post-placeholder");
											foundPostCount ++;
											foundToplevelPostCount ++;
											purr("<a href='#p"+postData.postid+"'>New post</a> from <b>"+postData.poster_name+"</b>: <a href='#p"+postData.postid+"'>"+postData.subject+"</a>");
											windowMessage = "New post from "+postData.poster_name;
										}
										else
										{
											var parentId = parseInt(postData.parent_commentid); 
											var postid = parentId;
											if(!postid)
												postid = parseInt(postData.top_commentid);
											var replyToPost = !parentId;
											
											postData.indent_css = replyToPost ? 0 : parseInt($("#comment"+postid).attr("indent_css")) + %%boards_indent_multiplier%%;
											
											postData.indent_is_odd = ((postData.indent_css+0)/%%boards_indent_multiplier%%) % 2 == 0 ? 1:0;
											
											var output = $("#reply-tmpl").tmpl(postData);
											
											var foundThisPost = false;
											if(replyToPost)
											{
												var insertSelector = "#post"+postid+" .replies_container";
												//console.debug("insertSelector:"+insertSelector);
												// This needs to be appended to the selector
												if($(insertSelector).get(0))
													foundThisPost = true;
													
												output.appendTo(insertSelector);
											}
											else
											{
												var insertSelector = "#wrap" + postid;
												// This needs to be inserted after the selector
												//console.debug("insertSelector:"+insertSelector);
												if($(insertSelector).get(0))
													foundThisPost = true;
												output.insertAfter(insertSelector);
											}
											
											if(foundThisPost)
											{
												foundPostCount ++;
												purr("<a href='#c"+postData.postid+"'>New comment</a> from <b>"+postData.poster_name+"</b>: <a href='#c"+postData.postid+"'>"+postData.subject+"</a>");
												windowMessage = "New comment from "+postData.poster_name;
											}
										}
									}
									
									if(foundPostCount > 0)
									{
										// Play sound effect
										var d = $('<div/>').html(insertPlayer());
										d.appendTo($(document.body));
										// Sound effect isnt long, remove after its done
										setTimeout(function(){d.remove();delete d}, 1000);
										
										// Start page title flasher (auto stops on mouse move)
										$.flashTitle(foundPostCount == 1 ? windowMessage : "New posts on page");
										
										// Fix any video thumbs and other onload scripts
										runOnloadScripts();
									}
									
									if(foundToplevelPostCount > 0)
									{
										// Update the number of posts displayed at the top of the page
										var idx2 = $('.idx2'); 
										idx2.html( parseInt(idx2.html()) + foundToplevelPostCount );
										var max  = $('.max_idx');
										max.html( parseInt(max.html()) + foundToplevelPostCount );
										
									}
								}
								pollingLock = false;
								//purr("<a href='#'>New test style</a> from <b>Josiah Bryan</b>");
							}
							catch(e)
							{
								if(e && window.console)
									window.console.debug(e);
							}
						}	
					},
					error: function() 
					{ 
						//alert("Error");
						//document.location.href = linkHref; 
					}
					
				});
			};
		setInterval(doPoll, 5000);
		
	});
	</script>
