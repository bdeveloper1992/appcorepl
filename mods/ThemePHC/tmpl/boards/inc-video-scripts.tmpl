<tmpl_loop video_provider_list>
	<script id="%%provider_class%%-tmpl" type="text/x-jquery-tmpl">
		%%iframe_tmpl%%
	</script>
	<tmpl_if extra_js>
		<script>
			%%extra_js%%
		</script>
	</tmpl_if>
</tmpl_loop>


<script type="text/javascript">
window.VideoProviderList = %%video_provider_list_json%%;
$(function() {
	// Add in-page video player to links marked 'video-play-link'. They should be something like:
	// 	<a href='$url' class='video-play-link' videoid='$code'>
	// 		<img src="http://img.youtube.com/vi/$code/1.jpg" border=0>
	// 		<span class='overlay'></span>
	// 	</a>
	// Appropriate CSS (above) adds a play icon via the span.overlay element.
	// Note that the HTML example shown will render a perfectly valid image link to the video site even if this
	// javascript doesn't work for some reason, so no underlying functionality is lost if JS is disabled.
	//
	// NOTE - The script below EXPECTS a 'videoid' attribute on the link to contain the videoid.
	// If not present, the script wont work - the link will just fall thru and redirect the user to whatever the href is.
	
	$('a.video-play-link').live("click", function() {

		var th = $(this),
		    // Create a loading indicator
		    loading = $('<img/>')
		    	.attr('src',loaderGif);

		// No videoid - we dont do parsing here. Just fall thru and allow the link to work as links would normally work.
		if(!th.attr('videoid'))
			return true;
		
		// Fade out the icon for the video
		th.children('img').animate({opacity:0},300);
		
		// Add in the loading image
		th.append(loading);
		
		// Animate expanding the link (assuming its CSS is display:block) to the size of the player.
		// When done, insert an iframe into the block that auto-plays the video.
		var list = window.VideoProviderList;
		for(var i=0;i<list.length;i++)
		{
			var ref = list[i];
			if(th.hasClass(ref.provider_class))
			{
				var w = ref.iframe_size[0], 
				    h = ref.iframe_size[1];
				th.animate({width:w, height:h}, 300, "swing", function()
				{
					var data = 
					{
						width: w,
						height: h,
						videoid: th.attr('videoid')
					};
					
					// In one fell swoop, read the template, apply the data hash (above),
					// and read back the resulting html and insert it into the link block
					th.html($("#"+ref.provider_class+"-tmpl").tmpl(data).get(0));
				});
				
				// Found our provider, no neeed to check for others
				return false;
			}
		};
		return false;
	});
});

</script>
