	<!--<a_cssx src="%%modpath%%/css/boards.css"/>-->
	<a:cssx src="%%appcore%%/mods/ThemePHC/css/boards-list.css"/>
	<!--<a_cssx src="%%appcore%%/js/jquery.qtip.min.css"/>-->
	
	<title><tmpl_var board_title> - Bulletin Boards</title>
	
	<!-- Board Title -->
	<h1><tmpl_var board_title></h1>
	
	<script>
	// Using the ${CDN:...} macro so that the URL matches the <img> pre-catching tag at the bottom of the page
	loaderGif = '${CDN:%%appcore%%/mods/ThemePHC/images/fb-ajax-loader.gif}';
	</script>
	
	<!-- Board Tagline -->
	<!--<p class='board-tagline'><tmpl_var board_tagline></p>-->
	
	<!-- Board Description -->
	<!--<tmpl_if description>
		<div id='board-intro'>
			<tmpl_var board_description>
		</div>
	</tmpl_if>-->
	
	<!-- Removed: "print list" link and script -->
	
	<!-- Removed: "delete list" link and script -->
	
	<!-- "Add a post" link -->
	<!--<a class='new_link' href='%%bin%%/<tmpl_var board_folder_name>/new'><img src='%%appcore%%/images/silk/add.png' align=absmiddle border=0> Add a new post to this forum!</a>-->
	
	<script>
	$("a.readmore_link").live("click",function() {
		
		var	th     = $(this),
			postid = th.attr('postid');
			state  = th.attr('state');
		
		if(state == 'loaded')
		{
			var	shortId = "#short_text_"+postid,
				blockId = "#long_text_"+postid,
				rowRef = $("tr.#post"+postid),
				off = rowRef.offset();
			
			// Probably a "comment" read more link, not a post readmore link, 
			// so find the comment wrapper <div> offset
			if(!off)
				off = (rowRef = $("#wrap"+postid)).offset();
			
			$(shortId).show(300);
			$(blockId).hide(300);
			// only scroll doc if top of the post is above the window top.
			// That way we dont "confuse" the user with unnecessary changes
			if(off && off.top < document.body.scrollTop)
				$.scrollTo(rowRef,300);
				
			th.attr('state', 'unloaded');
			th.html('Read More &raquo;');
			
		}
		else
		{
			th.attr('state', 'loaded');
			th.html('&laquo; Less');
			
			var	blockId  = "#long_text_"+postid,
				shortId  = "#short_text_"+postid,
				postHref = th.attr('href'),
				loading  = $('<img/>')
					.attr('src',loaderGif)
					.attr('align','absmiddle');
				
			$("body").css("cursor", "progress");
			th.css("cursor", "progress");
			
			loading.insertAfter(th);
			
			var errorFunc = function() 
			{
				// Error loading, just redirect to the page itself...
				document.location.href = postHref; 
			};
			
			$.ajax({
				type: "GET",
				url: postHref,
				data:
				{
					output_fmt: "json",
					no_comments: 1
				},
				success: function(data)
				{
					//alert("Got post data:"+data+", type:"+typeof(data));
					if(typeof(data) == "string")
					{
						// something wierd on server - should be JSON!
						errorFunc();
					}
					else
					{
						$(blockId).html(data.post_text);
						$(shortId).hide();
						$(blockId).show(300);
						loading.remove();
						
						// Remove busy cursor
						$("body").css("cursor", "auto");
						th.css("cursor", "pointer");
						
						//alert(data);
						//console.debug(data);
					}	
				},
				error: errorFunc
				
			});
		}
		
		return false;
	});
	
	function ajax_post_new(formElm)
	{
		var postData = {
			comment: formElm.text.value,
			poster_name: formElm.poster_name.value,
			poster_email: formElm.poster_email.value,
			output_fmt: "json",
			plain_text: 1
		};
		
		$("#post-placeholder").show();
		
		var errorFunc = function() 
		{
			$("#post-placeholder").hide();
			if(confirm("There was an error saving your post to the server - nothing was saved. Do you want to use the simple post page instead of this fancy page to make your post?"))
			{
				document.location.href = "%%binpath%%/%%board_folder_name%%/new?text=" + postData.text; 
			}
		}
		
		var postUrl = "%%binpath%%/%%board_folder_name%%/post";
		//alert(postUrl);
		$.ajax({
			type: "POST",
			url: postUrl,
			data: postData,
			success: function(data)
			{
				//alert("Got post data:"+data+", type:"+typeof(data));
				if(typeof(data) == "string")
				{
					// something wierd on server - should be JSON!
					errorFunc();
				}
				else
				{
					//alert(data);
					//console.debug(data);
					$("#post-tmpl").tmpl(data).insertAfter("#post-placeholder");
					$("#post-placeholder").hide();
					formElm.text.value = "";
					formElm.text.updateAutogrow();
				}	
			},
			error: errorFunc
			
		});
		
		return false;
	}
	</script>
		
	<table class='postlist' width='750' align=center cellspacing=0>
		<tbody>
			<tr class='post newpost'>
				<td valign='top' align='center' class='photo'>
					<!--<img class='user_photo' src="${CDN:/appcore/mods/User/images/male-fb-sq-50px.jpg}">-->
					<img class='user_photo' src="http://www.gravatar.com/avatar/%%user_email_md5%%?d=$(CDN:<tmpl_if user_photo>%%appcore%%%%user_photo%%<tmpl_else>%%appcore%%/mods/User/images/male-fb-sq-50px.jpg</tmpl_if>)&s=50" userid='%%user_userid%%'>
				</td>
				<td valign='top' class='data'>
					<form class='wrap'  onsubmit='return ajax_post_new(this)'>
						<div class='content'>
							<textarea class='expandText' style="width:99%;height:5em" class="expandText" name="text"></textarea>
						</div>
						<div class='controls'>
							<button type='submit' class='button'>Post</button>
						</div>
						<div class='form' id='postas_form'<tmpl_unless user_display> style='display:block'</tmpl_unless>>
							<table>
								<tr>
									<td>Name:</td>
									<td><input value='%%user_display%%' name='poster_name'></td>
								</tr>
								<tr>
									<td>Email:</td>
									<td><input value='%%user_email%%' name='poster_email'></td>
								</tr>
							</table>
						</div>
						<tmpl_if user_display>
							<div class='ident' id='postas_display'>
								<script>
								function show_postas_form()
								{
									$("#postas_form").show(200);
									$("#postas_display").hide(200);
								}
								</script>
								Posting as <b>%%user_display%%</b> - <a href='javascript:void(show_postas_form());'>Change</a>
							</div>
						</tmpl_if>
					</form>
				</td>
			</tr>
			<tmpl_if len>
				<tr class='post current_nums'>
					<td colspan=2>
						<div><span id='current_text'>Showing posts %%idx1%% - <span id='idx2'>%%idx2%%</span> of %%max_idx%% posts</span>
							<tmpl_if next_idx>
								<span class=link>(<a class='loadmore_link' href='%%binpath%%/%%board_folder_name%%?idx=%%next_idx%%&len=%%len%%'>Load more posts ...</a><i class='loaded'></i>)</span>
							</tmpl_if>
						</div>
					</td>
				</tr>
			</tmpl_if>
			<tr class='post post-placeholder' id='post-placeholder'>
				<td valign='top' align='center' class='photo'>
					<img class='user_photo' src="${CDN:/appcore/mods/User/images/male-fb-sq-50px.jpg}" userid='%%user_uiserid%%'>
				</td>
				<td valign='top' class='data'>
					<img src='%%appcore%%/mods/ThemePHC/images/fb-ajax-loader.gif'>
				</td>
			</tr>
				
			<tmpl_loop posts>
				${inc:%%appcore%%/mods/ThemePHC/tmpl/boards/inc-postrow.tmpl}
			</tmpl_loop>
			
			<tmpl_if next_idx>
				<tr class='loadmore'>
					<td colspan=2 align=center>
						<a href='%%binpath%%/%%board_folder_name%%?idx=%%next_idx%%&len=%%len%%' id="load_more_bottom">Load more posts ...</a>
					</td>
				</tr>
			</tmpl_if>
		</tbody>
	</table>
	
	<script>
	window.PagingNextIndex = %%next_idx%%;
	//loadmore_link
	var pagingLock = false;
	var pagingFunc = function(){
		
		if(pagingLock)
			return;
			
		pagingLock = true;
		
		if(!window.PagingNextIndex)
			return false;
			
		$("body").css("cursor", "progress");
			
		var th = $(this),
		    linkHref = th.attr("href"),
		    loadMoreUrl = '%%binpath%%/%%board_folder_name%%',
		    loading = $('<img/>')
		    	.attr('src',loaderGif)
		    	.attr('align','absmiddle');
		
		th.css("cursor", "progress");
		loading.insertAfter(th);
		
		// Hide just incase it's stil currently visible
		$('.current_nums i.loaded').hide();
		
		$.ajax({
			type: "GET",
			url: loadMoreUrl,
			data: 
			{
				idx: window.PagingNextIndex,
				len: %%len%%,
				output_fmt: 'json'
			},
			success: function(data)
			{
				//console.debug("got post data: "+data+", typeof: "+typeof(data));
				//alert("Got post data:"+data+", type:"+typeof(data));
				if(typeof(data) == "string")
				{
					// something wierd on server - should be JSON!
					document.location.href = linkHref;
					//alert("Got data as string");
				}
				else
				{
					// Iterate over the list of posts and reate the posts from the template
					var posts = data.posts;
					for(var i=0;i<posts.length;i++)
					{
						var postData = posts[i];
					
						$("#post-tmpl").tmpl(postData).insertBefore("tr.loadmore");
					}
					
					loading.remove();
					
					var loaded = $('.current_nums i.loaded');
					loaded.show();
					//loaded.get()[0].innerHTML = "Loaded!";
					setTimeout(function() { loaded.hide(300) }, 3500);
					
					// Store the next index for the next time they request more posts
					window.PagingNextIndex = data.next_idx;
					
					// Update the number at the top of the page
					$("#idx2").html(data.idx2);
					
					// If we've reached the end, update the DOM
					if(!data.next_idx)
					{
						$("tr.loadmore a").html("(No more posts)");
						$("tr.loadmore a").addClass("not-a-link");
						$(".current_nums span.link").remove();
						$("#current_text").html("Showing all "+data.max_idx+" posts");
					}
					
					// Remove busy cursor
					$("body").css("cursor", "auto");
					th.css("cursor", "pointer");
					
					pagingLock = false;
				}	
			},
			error: function() 
			{ 
				//alert("Error");
				document.location.href = linkHref; 
			}
			
		});
		
		return false;
	}
	
	$(".loadmore a").live("click",pagingFunc);
	$("a.loadmore_link").live("click",pagingFunc);
	
	// Add a "load on scroll" method. 
	// This listens for the "onscroll" event and checks to see if the
	// bottom "Load more" link is visible at the bottom of the window.
	// As soon as the link gets close (see 'fudge'), then the 
	// paging function (above) is triggered just as if the user
	// had clicked the link
	$(window).bind('scroll', function(){
			
		var rowRef = $("tr.loadmore");
		var scrollBottom = $(window).scrollTop() + $(window).height();
		var fudge = 100; // amount by which to fudge the detection
		var rowTop = rowRef.offset().top - fudge; 
		if(rowTop < scrollBottom)
		{
			var domElm = rowRef.get()[0]; //document.getElementById("load_more_bottom");
			domElm.doPaging = pagingFunc;
			domElm.doPaging();
		}
	});
	
	
	
	</script>
	
	<script id="post-tmpl" type="text/x-jquery-tmpl">
		${tmpl2jq:%%appcore%%/mods/ThemePHC/tmpl/boards/inc-postrow.tmpl}
	</script>
	<script id="reply-tmpl" type="text/x-jquery-tmpl">
		${tmpl2jq:%%appcore%%/mods/ThemePHC/tmpl/boards/inc-postreply.tmpl}
	</script>
	
	<script id="replyform-tmpl" type="text/x-jquery-tmpl">
		<form class='reply_form' 
			onsubmit='return ajax_post_reply(this)' 
			id='reply_form_${postid}' 
			postid='${postid}'
			top_commentid='${top_commentid}'>
			
			<div class='wrap'>
				<input type='hidden' name='postid' value='${postid}'>
				<div class='content'>
					<textarea class='expandText' style="width: 450px; height:5em" class="expandText" name="text"></textarea>
				</div>
				<div class='controls'>
					<button type='submit' class='button' id='button_${postid}'>Post</button>
					<a href='#' class='cancel'>Cancel</a> 
				</div>
				<div class='form' id='postas_form_${postid}'<tmpl_unless user_display> style='display:block'</tmpl_unless>>
					<table>
						<tr>
							<td>Name:</td>
							<td><input value='%%user_display%%' name='poster_name'></td>
						</tr>
						<tr>
							<td>Email:</td>
							<td><input value='%%user_email%%' name='poster_email'></td>
						</tr>
					</table>
				</div>
				<tmpl_if user_display>
				<div class='ident' id='postas_display_${postid}'>
					Posting as <b>%%user_display%%</b> - <a href='javascript:void(show_postas_form_tmpl(${postid}));'>Change</a>
				</div>
				</tmpl_if>
				<div class='fc'></div>
			</div>
		</form>
	</script>
	
	<script>
	function show_postas_form_tmpl(postid)
	{
		$("#postas_form_"+postid).show(200);
		$("#postas_display_"+postid).hide(200);
	}
	</script>
	
	<script>
	function x(e){return document.getElementById(e)}
	$(".actions .reply_link").live("click",function(){
			
		var	th = $(this),
		
			// Get ID of the post
			postid = th.attr("postid"),
			topid  = th.attr("top_commentid"),
			
			// Create selector string for the placeholder
			replyHolder = "#reply"+postid,
			
			// Check to see if the form is already in the DOM
			div = x("reply_form_"+postid),
			
			tmp = undefined,
			
			cancelFunc = function() 
			{
				var div = $('#reply_form_'+postid);
				div.hide(300, function(){
					//div.parentNode.removeChild(div);
					div.remove();
				});
			};
			
			
		// Create reply form for this post if doesnt already exist
		if(!div)
		{
			tmp = $("#replyform-tmpl").tmpl({postid:postid,top_commentid:topid});
			tmp.hide();
			$(replyHolder).append(tmp);
		}
		else
		{
			tmp = $(replyHolder+" .reply_form")
		}
		
		// Cache the reply type (reply to comment/reply to post) on the form element
		tmp.attr("type", th.attr("type"));
		
		// Add "Cancel" link handler
		$(replyHolder+' a.cancel').live("click",function(){
			
			cancelFunc();
			return false;
		});
		
		// Focus on text area
		var ta = $(replyHolder+' .expandText');
		ta.autogrow();
		
		// Close the reply form if user presses Escape
		ta.keyup(function(e){
			if (!e) var e = window.event;
			if (e.keyCode)    e.code = e.keyCode;
			else if (e.which) e.code = e.which;
			if(e.code == 27)
				cancelFunc();
		});
		
		
		// Make sure form visible
		//tmp.show(300, function() { ta.focus(); });
		tmp.show();
		ta.focus();
		
		
		return false;
		
	});
	
	function ajax_post_reply(formElm)
	{
		var postid = formElm.postid.value;
		var isPost = formElm.getAttribute("type") != "comment";
		var topid  = isPost ? postid : formElm.getAttribute("top_commentid");

		var postData = {
			comment: formElm.text.value,
			poster_name: formElm.poster_name.value,
			poster_email: formElm.poster_email.value,
			parent_commentid: isPost ? 0 : formElm.postid.value,
			output_fmt: "json",
			plain_text: 1
		};
		
		
		var btn = $("#button_"+postid);
		btn.html("<img src='"+loaderGif+"'>");
		btn.attr("disabled","true");
		//$("#post-placeholder").show();
		
		var errorFunc = function() 
		{
			//$("#post-placeholder").hide();
			if(confirm("There was an error saving your comment to the server - nothing was saved. Do you want to use the simple post page instead of this fancy page to make your post?"))
			{
				document.location.href = "%%binpath%%/%%board_folder_name%%/new?text=" + postData.text; 
			}
		};
		
		
		var postUrl = "%%binpath%%/%%board_folder_name%%/" + topid + "/post";
		//alert(postUrl);
		$.ajax({
			type: "POST",
			url: postUrl,
			data: postData,
			success: function(data)
			{
				//console.debug("got post data: "+data+", typeof: "+typeof(data));
				//alert("Got post data:"+data+", type:"+typeof(data));
				if(typeof(data) == "string")
				{
					// something wierd on server - should be JSON!
					errorFunc();
				}
				else
				{
					// apply proper indent to child comments
					data.indent_css = isPost ? 0 :
								parseInt($("#comment"+postid).attr("indent_css")) + 2;
					
					//console.debug(data);
					//console.debug("isPost:"+isPost);
					
					var output = $("#reply-tmpl").tmpl(data);
					if(isPost)
					{
						var insertSelector = "#post"+postid+" .replies_container";
						//console.debug("insertSelector:"+insertSelector);
						// This needs to be appended to the selector
						output.appendTo(insertSelector);
					}
					else
					{
						var insertSelector = "#comment" + postid;
						// This needs to be inserted after the selector
						output.insertAfter(insertSelector);
					}
					
					//$("#post-placeholder").hide();
					
// 					formElm.text.value = "";
// 					formElm.text.updateAutogrow();
					
					formElm.parentNode.removeChild(formElm);
				}	
			},
			error: errorFunc
			
		});
		
		return false;
	}
	
	$(".actions .add_like a").live("click",function(){
		//alert("Not done yet");
		
		var th = $(this),
		    // Create a loading indicator
		    loading = $('<img/>')
		    	.attr('src',loaderGif)
		    	.attr('align','absmiddle')
		    	.attr('class','like-loading-img');
		
		loading.insertAfter(th);
		
		var postid = th.attr('postid');
		
		var postUrl = th.attr('like_url');
		//alert(postUrl);
		$.ajax({
			type: "POST",
			url: postUrl,
			//data: postData,
			success: function(data)
			{
				//console.debug("got post data: "+data+", typeof: "+typeof(data));
				//alert("Got post data:"+data+", type:"+typeof(data));
				loading.remove();
				
				$("#addlike"+postid).hide();
				$("#youlike"+postid).show();
				$("#unlike" +postid).show();
			}
		});
				
		
		return false;
	});
	
	$(".actions .unlike a").live("click",function(){
		//alert("Not done yet");
		
		var th = $(this),
		    // Create a loading indicator
		    loading = $('<img/>')
		    	.attr('src',loaderGif)
		    	.attr('align','absmiddle')
		    	.attr('class','like-loading-img');
		
		loading.insertAfter(th);
		
		var postid = th.attr('postid');
		
		var postUrl = th.attr('unlike_url');
		//alert(postUrl);
		$.ajax({
			type: "POST",
			url: postUrl,
			//data: postData,
			success: function(data)
			{
				//console.debug("got post data: "+data+", typeof: "+typeof(data));
				//alert("Got post data:"+data+", type:"+typeof(data));
				loading.remove();
				
				$("#addlike"+postid).show();
				$("#youlike"+postid).hide();
				$("#unlike" +postid).hide();
			}
		});
		
		
		return false;
	});
	
	$(".comment_text .delete_comment_link").live("click",function(){
		
		if(!confirm("Are you sure you want to delete this?"))
			return false;
			
			
		var th = $(this),
		    // Create a loading indicator
		    loading = $('<img/>')
		    	.attr('src',loaderGif)
		    	.attr('align','absmiddle')
		    	.attr('class','like-loading-img');
		
		loading.insertAfter(th);
		
		var postid = th.attr('postid');
		
		var postUrl = th.attr('href');
		//alert(postUrl);
		$.ajax({
			type: "POST",
			url: postUrl,
			success: function(data)
			{
				loading.remove();
				
				var ref = $("#wrap"+postid);
				ref.hide(300, function() { ref.remove() });
			}
		});
	
		return false;
	});
	
	
	$("tr.post .delete_post_link").live("click",function(){
		
		if(!confirm("Are you sure you want to delete this?"))
			return false;
			
		var th = $(this),
		    // Create a loading indicator
		    loading = $('<img/>')
		    	.attr('src',loaderGif)
		    	.attr('align','absmiddle')
		    	.attr('class','like-loading-img');
		
		loading.insertAfter(th);
		
		var postid = th.attr('postid');
		
		var postUrl = th.attr('href');
		//alert(postUrl);
		$.ajax({
			type: "POST",
			url: postUrl,
			success: function(data)
			{
				loading.remove();
				
				var ref = $("#post"+postid); 
				ref.hide(300, function() { ref.remove() });
			}
		});
	
		return false;
	});
	</script>
	
	
<tmpl_loop video_provider_list>
	<script id="%%provider_class%%-tmpl" type="text/x-jquery-tmpl">
		%%iframe_tmpl%%
	</script>
	<tmpl_if extra_js>
		<script>
			%%extra_js%%
		</script>
	</tmpl_if>
</tmpl_loop>

<script type="text/javascript">


$(function() {
	var providerList = %%video_provider_list_json%%;
	
	$('textarea').autogrow();

	// Add in-page video player to links marked 'video-play-link'. They should be something like:
	// 	<a href='$url' class='video-play-link' videoid='$code'>
	// 		<img src="http://img.youtube.com/vi/$code/1.jpg" border=0>
	// 		<span class='overlay'></span>
	// 	</a>
	// Appropriate CSS (above) adds a play icon via the span.overlay element.
	// Note that the HTML example shown will render a perfectly valid image link to the video site even if this
	// javascript doesn't work for some reason, so no underlying functionality is lost if JS is disabled.
	//
	// NOTE - The script below EXPECTS a 'videoid' attribute on the link to contain the videoid.
	// If not present, the script wont work - the link will just fall thru and redirect the user to whatever the href is.
	
	$('a.video-play-link').live("click", function() {

		var th = $(this),
		    // Create a loading indicator
		    loading = $('<img/>')
		    	.attr('src',loaderGif);

		// No videoid - we dont do parsing here. Just fall thru and allow the link to work as links would normally work.
		if(!th.attr('videoid'))
			return true;
		
		// Fade out the icon for the video
		th.children('img').animate({opacity:0},300);
		
		// Add in the loading image
		th.append(loading);
		
		// Animate expanding the link (assuming its CSS is display:block) to the size of the player.
		// When done, insert an iframe into the block that auto-plays the video.
		for(var i=0;i<providerList.length;i++)
		{
			var ref = providerList[i];
			if(th.hasClass(ref.provider_class))
			{
				var w = ref.iframe_size[0], 
				    h = ref.iframe_size[1];
				th.animate({width:w, height:h}, 300, "swing", function()
				{
					var data = 
					{
						width: w,
						height: h,
						videoid: th.attr('videoid')
					};
					
					// In one fell swoop, read the template, apply the data hash (above),
					// and read back the resulting html and insert it into the link block
					th.html($("#"+ref.provider_class+"-tmpl").tmpl(data).get(0));
				});
				
				// Found our provider, no neeed to check for others
				return false;
			}
		};
		return false;
	});
});

$(function() {
// 	$('a[title]').qtip();
// 	$('img[alt]').qtip();
});

</script>


<script type="text/javascript" src="%%appcore%%/js/jquery-autogrow.js" index="50"></script>
<script type="text/javascript" src="%%appcore%%/js/jquery-scrollto.js" index="50"></script>
<script type="text/javascript" src="%%appcore%%/js/jquery.tmpl.js" index="50"></script>
<!--<_script type="text/javascript" src="%%appcore%%/js/jquery.qtip.min.js" index="0"></script>-->

<!-- Some browsers don't seem to load the loader gif until its actually visible - which causes visual artifacts
     when the "empty image" icon is shown, *then* the gif animation. By putting this image down here, initially
     visible then hiding it as soon as its loaded, we force the browser to preload the image inorder to reduce
     or prevent such visual artifcats. -->
<img src='%%appcore%%/mods/ThemePHC/images/fb-ajax-loader.gif' onload='this.style.display="none"'>

